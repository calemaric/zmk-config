/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer_dvorak {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp SEMICOLON  &kp COMMA  &kp PERIOD  &kp P  &kp Y        &kp F    &kp G  &kp C     &kp R  &kp L  &kp BSPC
&kp LCTRL  &kp A          &kp O      &kp E       &kp U  &kp I        &kp D    &kp H  &kp T     &kp N  &kp S  &kp DEL
&kp LSHFT  &kp SQT        &kp Q      &kp J       &kp K  &kp X        &kp B    &kp M  &kp W     &kp V  &kp Z  &kp ESC
                                     &kp LGUI    &mo 2  &kp SPACE    &kp RET  &mo 3  &kp RALT
            >;

            label = "Dvorak";
        };

        default_layer_qwerty {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R   &kp T        &kp Y      &kp U   &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F   &kp G        &kp H      &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V   &kp B        &kp N      &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LGUI  &trans  &kp SPACE    &kp ENTER  &trans  &kp RALT
            >;

            label = "Qwerty";
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB           &kp N1  &kp N2  &kp N3    &kp N4  &kp N5       &kp N6    &kp N7         &kp N8       &kp N9     &kp N0           &kp BSPC
&kp LEFT_CONTROL  &trans  &trans  &trans    &trans  &trans       &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &trans           &trans
&kp LSHFT         &trans  &trans  &trans    &trans  &trans       &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &kp PRINTSCREEN  &trans
                                  &kp LGUI  &trans  &kp SPACE    &kp RET   &trans         &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_PARENTHESIS  &kp EQUAL    &kp ASTERISK  &kp RIGHT_PARENTHESIS  &kp PLUS  &kp RIGHT_BRACKET  &kp EXCLAMATION  &kp BSPC
&kp LCTRL  &kp MINUS         &kp PERCENT     &kp AMPS         &kp BACKSLASH         &kp SLASH    &kp MINUS     &kp EQUAL              &kp LBKT  &kp RBKT           &kp QUESTION     &kp GRAVE
&kp LSHFT  &kp DOLLAR        &kp HASH        &trans           &trans                &kp UNDER    &kp AT        &kp PLUS               &kp LBRC  &kp RBRC           &kp PIPE         &kp TILDE
                                             &kp LGUI         &trans                &kp SPACE    &kp RET       &trans                 &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &trans  &bt BT_CLR_ALL  &trans    &trans      &trans             &trans           &trans  &trans  &trans
&trans  &trans        &trans        &trans  &trans          &trans    &kp C_PREV  &kp C_PLAY_PAUSE   &kp C_NEXT       &trans  &trans  &trans
&trans  &tog 1        &tog 0        &trans  &out OUT_TOG    &trans    &trans      &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans  &trans  &trans
                                    &trans  &trans          &trans    &trans      &trans             &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        media_and_layers {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};
